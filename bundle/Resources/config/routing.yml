# WeatherController routes
netgen_openweather_weather_by_geographic_coordinates:
    path: /netgen/openweather/weather/coordinates/{latitude}/{longitude}
    defaults: { _controller: 'netgen_open_weather_map.controller.weather:byGeographicCoordinates' }
    methods:
        - GET
    requirements:
        latitude: \d+
        longitude: \d+

netgen_openweather_weather_by_city_name:
    path: /netgen/openweather/weather/cityname/{cityName}/{countryCode}
    defaults: { _controller: 'netgen_open_weather_map.controller.weather:byCityName', countryCode: '' }
    methods:
        - GET
    requirements:
        cityName: \w+
        countryCode: \w+

netgen_openweather_weather_by_city_id:
    path: /netgen/openweather/weather/cityid/{cityId}
    defaults: { _controller: 'netgen_open_weather_map.controller.weather:byCityId' }
    methods:
        - GET
    requirements:
        cityId: \d+

netgen_openweather_weather_by_zip_code:
    path: /netgen/openweather/weather/zipcode/{zipCode}/{countryCode}
    defaults: { _controller: 'netgen_open_weather_map.controller.weather:byZipCode', countryCode: '' }
    methods:
        - GET
    requirements:
        zipCode: \d+
        countryCode: \w+

netgen_openweather_weather_by_rectangle_zone:
    path: /netgen/openweather/weather/rectanglezone/{longitudeLeft}/{latitudeBottom}/{longitudeRight}/{latitudeTop}/{mapZoom}/{cluster}
    defaults: { _controller: 'netgen_open_weather_map.controller.weather:byRectangleZone', mapZoom: 10, cluster: 'yes' }
    methods:
        - GET
    requirements:
        longitudeLeft: \d+
        latitudeBottom: \d+
        longitudeRight: \d+
        latitudeTop: \d+
        mapZoom: \d+
        cluster: \w+

netgen_openweather_weather_by_circle:
    path: /netgen/openweather/weather/circle/{latitude}/{longitude}/{cluster}/{numberOfCities}
    defaults: { _controller: 'netgen_open_weather_map.controller.weather:byCircle' }
    methods:
        - GET
    #requirements:
    #    latitude: '\[d\.]+'
    #    longitude: '\[d\.]+'
    #    cluster: \w+
    #    numberOfCities: \d+

netgen_openweather_weather_by_city_ids:
    path: /netgen/openweather/weather/cityids
    defaults: { _controller: 'netgen_open_weather_map.controller.weather:byCityIds' }
    methods:
        - GET
# END of WeatherController routes


# AirPollutionController routes
netgen_openweather_air_pollution_ozone:
    path: /netgen/openweather/airpollution/ozone/{latitude}/{longitude}/{datetime}
    defaults: { _controller: 'netgen_open_weather_map.controller.air_pollution:getOzoneData', datetime: 'current' }
    methods:
        - GET
    requirements:
        latitude: \d+
        longitude: \d+
        datetime: \w+

netgen_openweather_air_pollution_carbon_monoxide:
    path: /netgen/openweather/airpollution/carbonmonoxide/{latitude}/{longitude}/{datetime}
    defaults: { _controller: 'netgen_open_weather_map.controller.air_pollution:getCarbonMonoxideData', datetime: 'current' }
    methods:
        - GET
    requirements:
        latitude: \d+
        longitude: \d+
        datetime: \w+

netgen_openweather_air_pollution_sulfur_dioxide:
    path: /netgen/openweather/airpollution/sulfurdioxide/{latitude}/{longitude}/{datetime}
    defaults: { _controller: 'netgen_open_weather_map.controller.air_pollution:getSulfurDioxideData', datetime: 'current' }
    methods:
        - GET
    requirements:
        latitude: \d+
        longitude: \d+
        datetime: \w+

netgen_openweather_air_pollution_nitrogen_dioxide:
    path: /netgen/openweather/airpollution/nitrogendioxide/{latitude}/{longitude}/{datetime}
    defaults: { _controller: 'netgen_open_weather_map.controller.air_pollution:getNitrogenDioxideData', datetime: 'current' }
    methods:
        - GET
    requirements:
        latitude: \d+
        longitude: \d+
        datetime: \w+
# END of AirPollutionController routes


# UltravioletIndexController routes
netgen_openweather_ultraviolet_index:
    path: /netgen/openweather/ultravioletindex/{latitude}/{longitude}/{datetime}
    defaults: { _controller: 'netgen_open_weather_map.controller.ultraviolet_index:getUltravioletIndex', datetime: 'current' }
    methods:
        - GET
    requirements:
        latitude: \d+
        longitude: \d+
        datetime: \w+
# END of UltravioletIndexController routes

# DailyForecastController routes
netgen_openweather_weather_daily_forecast_city_name:
    path: /netgen/openweather/dailyforecast/cityname/{cityName}/{numberOfDays}/{countryCode}
    defaults: { _controller: 'netgen_open_weather_map.controller.daily_forecast:getForecastByCityName', numberOfDays: 16, countryCode: '' }
    methods:
        - GET
    requirements:
        cityName: \w+
        numberOfDays: \d+
        countryCode: \w+

netgen_openweather_weather_daily_forecast_city_id:
    path: /netgen/openweather/dailyforecast/cityid/{cityId}/{numberOfDays}
    defaults: { _controller: 'netgen_open_weather_map.controller.daily_forecast:getForecastByCityId', numberOfDays: 16 }
    methods:
        - GET
    requirements:
        cityName: \w+
        numberOfDays: \d+
        countryCode: \w+

netgen_openweather_weather_daily_forecast_geographic_coordinates:
    path: /netgen/openweather/dailyforecast/geocoords/{latitude}/{longitude}/{numberOfDays}
    defaults: { _controller: 'netgen_open_weather_map.controller.daily_forecast:getForecastByCityGeographicCoordinates', numberOfDays: 16 }
    methods:
        - GET
    requirements:
        cityName: \w+
        numberOfDays: \d+
        countryCode: \w+

netgen_openweather_weather_daily_forecast_geographic_coordinates:
    path: /netgen/openweather/dailyforecast/zipcode/{zipCode}/{numberOfDays}/{countryCode}
    defaults: { _controller: 'netgen_open_weather_map.controller.daily_forecast:getForecastByZipCode', numberOfDays: 16, countryCode: '' }
    methods:
        - GET
    requirements:
        zipCode: \w+
        numberOfDays: \d+
        countryCode: \w+
# END of DailyForecastController routes

# HourForecastController
netgen_openweather_weather_hour_forecast_city_name:
    path: /netgen/openweather/hourforecast/cityname/{cityName}/{countryCode}
    defaults: { _controller: 'netgen_open_weather_map.controller.hour_forecast:getForecastByCityName', countryCode: '' }
    methods:
        - GET
    requirements:
        cityName: \w+
        countryCode: \w+

netgen_openweather_weather_hour_forecast_city_id:
    path: /netgen/openweather/hourforecast/cityid/{cityId}
    defaults: { _controller: 'netgen_open_weather_map.controller.hour_forecast:getForecastByCityId' }
    methods:
        - GET
    requirements:
        cityId: \d+

netgen_openweather_weather_hour_forecast_geographic_coordinates:
    path: /netgen/openweather/hourforecast/geocoords/{latitude}/{longitude}
    defaults: { _controller: 'netgen_open_weather_map.controller.hour_forecast:getForecastByCityGeographicCoordinates' }
    methods:
        - GET
    requirements:
        latitude: \d+
        longitude: \d+

netgen_openweather_weather_hour_forecast_zip_code:
    path: /netgen/openweather/hourforecast/zipcode/{zipCode}/{countryCode}
    defaults: { _controller: 'netgen_open_weather_map.controller.hour_forecast:getForecastByZipCode', countryCode: '' }
    methods:
        - GET
    requirements:
        zipCode: \w+
        countryCode: \w+
# END of HourForecastController
